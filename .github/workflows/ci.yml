name: Continuous Integration

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]

jobs:
  tests:
    runs-on: ubuntu-latest
    name: Tests (PHP ${{ matrix.php-versions }})

    strategy:
      fail-fast: false
      matrix:
        php-versions: ["8.4"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: pdo, sqlite3, json, gd, curl
          tools: composer, phpunit
          coverage: xdebug

      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-versions }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-versions }}-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run Composer Security Audit
        run: |
          echo "🔍 執行相依套件安全掃描..."
          composer audit --format=json > security-audit.json || {
            echo "❌ 發現安全漏洞！"
            echo "詳細資訊："
            composer audit
            echo ""
            echo "請執行以下指令更新套件："
            echo "composer update"
            exit 1
          }
          echo "✅ 相依套件安全掃描通過"

      - name: Run code style check
        run: |
          if [ -f "vendor/bin/php-cs-fixer" ]; then
            echo "🎨 執行程式碼風格檢查..."
            composer cs-check
          else
            echo "⚠️  PHP-CS-Fixer 未安裝，跳過程式碼風格檢查"
          fi

      - name: Run static analysis
        run: |
          if [ -f "vendor/bin/phpstan" ]; then
            echo "🔬 執行靜態分析..."
            composer analyse || true
          else
            echo "⚠️  PHPStan 未安裝，跳過靜態分析"
          fi

      - name: Run tests
        run: |
          if [ -f "vendor/bin/phpunit" ]; then
            echo "🧪 執行單元測試..."
            composer test:coverage --coverage-clover=coverage.xml
          else
            echo "⚠️  PHPUnit 未安裝，跳過測試"
          fi

      - name: Upload coverage to Codecov
        if: matrix.php-versions == '8.4'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  dependency-updates:
    name: 📦 相依套件更新檢查
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          tools: composer

      - name: Install dependencies
        run: composer install --no-dev --prefer-dist --no-progress --no-interaction

      - name: Generate dependency report
        run: |
          echo "📋 產生相依套件報告..."
          composer show --format=json > dependencies.json
          composer licenses --format=json > licenses.json

          echo "## 相依套件安全狀態報告" > dependency-report.md
          echo "生成時間: $(date)" >> dependency-report.md
          echo "" >> dependency-report.md

          # 執行安全審查
          composer audit --format=json > audit.json 2>/dev/null || {
            echo "### ⚠️ 發現安全漏洞" >> dependency-report.md
            composer audit >> dependency-report.md 2>/dev/null || true
          }

          echo "### 📦 安裝的套件數量" >> dependency-report.md
          composer show | wc -l | xargs echo "總計:" >> dependency-report.md

      - name: Upload dependency report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-report
          path: |
            dependency-report.md
            dependencies.json
            licenses.json
            audit.json

  build:
    runs-on: ubuntu-latest
    name: Build & Package
    needs: [tests, dependency-updates]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          tools: composer

      - name: Install production dependencies
        run: composer install --no-dev --optimize-autoloader --no-progress --no-interaction

      - name: Create production build
        run: |
          echo "🏗️  建立生產環境版本..."

          # 移除開發用檔案
          rm -rf tests/
          rm -rf .github/
          rm -f phpunit.xml
          rm -f .gitignore

          # 建立版本資訊
          echo "<?php return ['version' => '$(date +%Y%m%d-%H%M%S)', 'build_time' => '$(date)'];" > version.php

          echo "✅ 生產環境版本建立完成"

      - name: Create package
        run: |
          tar -czf alleynote-$(date +%Y%m%d-%H%M%S).tar.gz \
            --exclude='*.tar.gz' \
            --exclude='.git*' \
            --exclude='node_modules' \
            --exclude='coverage' \
            .

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: alleynote-build
          path: alleynote-*.tar.gz
