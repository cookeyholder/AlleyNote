name: 程式碼品質

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality:
    name: 程式碼品質檢查
    runs-on: ubuntu-latest

    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4

    - name: 設定 Docker Compose
      run: |
        docker-compose build
        docker-compose up -d

    - name: 安裝相依套件
      run: echo "已由 Dockerfile 安裝相依套件，跳過此步驟"

    - name: 檢查程式碼風格
      run: docker-compose exec -T php ./vendor/bin/phpcs --standard=PSR12 src tests

    - name: 執行靜態分析
      run: docker-compose exec -T php ./vendor/bin/phpstan analyse src tests --level=max

    - name: 檢查程式碼複雜度
      run: docker-compose exec -T php ./vendor/bin/phpmd src,tests text cleancode,codesize,controversial,design,naming,unusedcode

    - name: 檢查重複程式碼
      run: docker-compose exec -T php ./vendor/bin/phpcpd src tests

    - name: 檢查相依套件安全性
      run: docker-compose exec -T php composer audit

    - name: SonarCloud 掃描
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=alleynote
          -Dsonar.organization=your-org
          -Dsonar.sources=src
          -Dsonar.tests=tests
          -Dsonar.php.coverage.reportPaths=coverage.xml
          -Dsonar.php.tests.reportPath=test-report.xml

#    - name: 發送品質檢查結果通知
#      if: always()
#      uses: appleboy/telegram-action@master
#      with:
#        to: ${{ secrets.TELEGRAM_CHAT_ID }}
#        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
#        format: markdown
#        message: |
#          🔍 *程式碼品質檢查結果*
#          
#          專案: AlleyNote
#          分支: ${{ github.ref_name }}
#          狀態: ${{ job.status == 'success' && '✅ 通過' || '❌ 失敗' }}
#          
#          提交者: ${{ github.actor }}
#          提交訊息: ${{ github.event.head_commit.message }}
