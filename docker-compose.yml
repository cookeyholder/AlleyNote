services:
    web:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: alleynote_web
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - ./backend:/var/www/html
            - ./docker/php/php.ini:/usr/local/etc/php/php.ini
            - ./backend/database:/var/www/html/database
        environment:
            APP_ENV: ${APP_ENV:-development}
            APP_DEBUG: ${APP_DEBUG:-true}
            DB_CONNECTION: sqlite
            DB_DATABASE: /var/www/html/database/alleynote.sqlite3
            # JWT 設定
            JWT_ALGORITHM: ${JWT_ALGORITHM:-RS256}
            JWT_ISSUER: ${JWT_ISSUER:-alleynote-api}
            JWT_AUDIENCE: ${JWT_AUDIENCE:-alleynote-client}
            JWT_ACCESS_TOKEN_TTL: ${JWT_ACCESS_TOKEN_TTL:-3600}
            JWT_REFRESH_TOKEN_TTL: ${JWT_REFRESH_TOKEN_TTL:-2592000}
            JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY}
            JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}
            # SSL 設定
            SSL_DOMAIN: ${SSL_DOMAIN:-localhost}
            SSL_EMAIL: ${SSL_EMAIL:-admin@localhost}
            CERTBOT_STAGING: ${CERTBOT_STAGING:-true}
        networks:
            - alleynote-network

    nginx:
        image: nginx:alpine
        container_name: alleynote_nginx
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./frontend/dist:/usr/share/nginx/html
            - ./docker/nginx/frontend-backend.conf:/etc/nginx/conf.d/default.conf
            # SSL 設定在開發環境中暫時禁用
            # - ./docker/nginx/ssl.conf:/etc/nginx/conf.d/ssl.conf
            - ./ssl-data:/etc/letsencrypt
            - ./certbot-data:/var/www/certbot
        depends_on:
            - web
        networks:
            - alleynote-network

    certbot:
        image: certbot/certbot
        container_name: alleynote_certbot
        restart: unless-stopped
        volumes:
            - ./ssl-data:/etc/letsencrypt
            - ./certbot-data:/var/www/certbot
        environment:
            SSL_DOMAIN: ${SSL_DOMAIN:-localhost}
            SSL_EMAIL: ${SSL_EMAIL:-admin@localhost}
            CERTBOT_STAGING: ${CERTBOT_STAGING:-true}
            SSL_WWW_DOMAIN: ${SSL_WWW_DOMAIN:-}
        command: |
            sh -c "
              if [ ! -f /etc/letsencrypt/live/$${SSL_DOMAIN}/fullchain.pem ]; then
                echo '正在申請 SSL 憑證...';
                if [ \"$${CERTBOT_STAGING}\" = \"true\" ]; then
                  staging_flag=\"--staging\";
                else
                  staging_flag=\"\";
                fi;
                certbot certonly --webroot --webroot-path=/var/www/certbot \
                  --email $${SSL_EMAIL} \
                  --agree-tos --no-eff-email \
                  $$staging_flag \
                  -d $${SSL_DOMAIN} \
                  $${SSL_WWW_DOMAIN:+-d www.$${SSL_DOMAIN}};
              else
                echo 'SSL 憑證已存在，跳過申請步驟';
              fi;
              trap exit TERM;
              while :; do
                echo '檢查憑證續簽...';
                certbot renew --quiet;
                sleep 12h & wait $$!;
              done;
            "
        networks:
            - alleynote-network

    redis:
        image: redis:alpine
        container_name: alleynote_redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - alleynote-network

# SQLite3 資料庫檔案將儲存在本地 database/ 目錄中

networks:
    alleynote-network:
        driver: bridge
