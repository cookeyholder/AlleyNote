services:
    web:
        build:
            context: ./backend
            dockerfile: ../docker/php/Dockerfile.production
            target: base # 生產環境使用 base stage
        container_name: alleynote_web_prod
        volumes:
            # 僅掛載必要的資料目錄
            - ./backend/storage:/var/www/html/storage
            - ./backend/database:/var/www/html/database
            - ./logs:/var/www/html/logs
        environment:
            APP_ENV: ${APP_ENV:-production}
            APP_DEBUG: ${APP_DEBUG:-false}
            APP_URL: ${APP_URL}
            DB_CONNECTION: ${DB_CONNECTION:-sqlite}
            DB_DATABASE: ${DB_DATABASE:-/var/www/html/database/alleynote.sqlite3}
            SESSION_LIFETIME: ${SESSION_LIFETIME:-120}
            CSRF_TOKEN_LIFETIME: ${CSRF_TOKEN_LIFETIME:-120}
            UPLOAD_MAX_SIZE: ${UPLOAD_MAX_SIZE:-10M}
            UPLOAD_MAX_FILES: ${UPLOAD_MAX_FILES:-10}
            STORAGE_PATH: ${STORAGE_PATH:-/var/www/html/storage/files}
            FORCE_HTTPS: ${FORCE_HTTPS:-true}
        networks:
            - app-network
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "php-fpm", "-t"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
        depends_on:
            - redis
        # 安全性設定
        security_opt:
            - no-new-privileges:true
        cap_drop:
            - ALL
        cap_add:
            - CHOWN
            - SETGID
            - SETUID

    nginx:
        image: nginx:alpine
        container_name: alleynote_nginx_prod
        volumes:
            - ./docker/nginx/nginx-production.conf:/etc/nginx/conf.d/default.conf:ro
            - ./docker/nginx/ssl.conf:/etc/nginx/conf.d/ssl.conf:ro
            - ./public:/var/www/html/public:ro
            - ./ssl-data:/etc/letsencrypt:ro
            - ./certbot-data:/var/www/certbot:ro
            - ./logs/nginx:/var/log/nginx
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - web
        networks:
            - app-network
        restart: unless-stopped
        # 安全性設定
        security_opt:
            - no-new-privileges:true
        cap_drop:
            - ALL
        cap_add:
            - CHOWN
            - SETGID
            - SETUID

    certbot:
        image: certbot/certbot
        container_name: alleynote_certbot_prod
        restart: unless-stopped
        volumes:
            - ./ssl-data:/etc/letsencrypt
            - ./certbot-data:/var/www/certbot
            - ./logs/certbot:/var/log/letsencrypt
        environment:
            - CERTBOT_EMAIL=${SSL_EMAIL}
            - CERTBOT_DOMAIN=${SSL_DOMAIN}
        command: |
            sh -c "
                # 等待 Nginx 啟動
                sleep 30;
                
                # 檢查是否已有憑證
                if [ ! -f /etc/letsencrypt/live/${SSL_DOMAIN}/fullchain.pem ]; then
                    echo '正在申請正式 SSL 憑證...';
                    certbot certonly --webroot --webroot-path=/var/www/certbot \
                        --email ${SSL_EMAIL} \
                        --agree-tos --no-eff-email \
                        --rsa-key-size 4096 \
                        -d ${SSL_DOMAIN} || exit 1;
                    echo 'SSL 憑證申請成功！';
                else
                    echo 'SSL 憑證已存在';
                fi;
                
                # 設定自動續簽
                trap exit TERM;
                while :; do
                    echo '檢查憑證續簽...';
                    certbot renew --quiet || echo '續簽檢查失敗';
                    sleep 12h & wait \$\${!};
                done;
            "
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: alleynote_redis_prod
        restart: unless-stopped
        volumes:
            - prod_redis_data:/data
            - ./logs/redis:/var/log/redis
        networks:
            - app-network
        command: >
            redis-server
            --save 900 1
            --save 300 10
            --save 60 10000
            --maxmemory 256mb
            --maxmemory-policy allkeys-lru

volumes:
    # SQLite3 資料庫檔案儲存在本地 database/ 目錄
    prod_redis_data:
        driver: local

networks:
    app-network:
        driver: bridge
