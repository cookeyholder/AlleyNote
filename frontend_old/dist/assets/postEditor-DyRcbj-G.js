import{r as t,b as e}from"./DashboardLayout-BjmJ-OJc.js";import{p as n}from"./posts-D8uqMnbu.js";import{A as a,t as s,r as i}from"./index-DHmEDfox.js";import{t as o}from"./toast-ChPGQGGG.js";import{C as l}from"./vendor-ckeditor-HyW9E3ya.js";import{a as r}from"./ConfirmationDialog-DKaQBUc8.js";import{l as d}from"./Loading-D3hznI52.js";import"./vendor-core-DW9qjkZC.js";class c{constructor(t,e={}){this.elementId=t,this.editor=null,this.options={uploadUrl:e.uploadUrl||`${a.baseURL}/attachments/upload`,onChange:e.onChange||null,initialData:e.initialData||"",placeholder:e.placeholder||"輸入文章內容...",...e}}async init(){const t=document.getElementById(this.elementId);if(!t)throw new Error(`Element with id "${this.elementId}" not found`);try{return this.editor=await l.create(t,{placeholder:this.options.placeholder,toolbar:{items:["heading","|","bold","italic","link","bulletedList","numberedList","|","blockQuote","insertTable","|","imageUpload","mediaEmbed","|","undo","redo"]},image:{toolbar:["imageTextAlternative","imageStyle:inline","imageStyle:block","imageStyle:side","|","linkImage"]},table:{contentToolbar:["tableColumn","tableRow","mergeTableCells"]}}),this.options.initialData&&this.editor.setData(this.options.initialData),this._configureUploadAdapter(),this.options.onChange&&this.editor.model.document.on("change:data",()=>{this.options.onChange(this.getData())}),this.editor}catch(e){throw e}}_configureUploadAdapter(){this.editor.plugins.get("FileRepository").createUploadAdapter=t=>new u(t,this.options.uploadUrl)}getData(){return this.editor?this.editor.getData():""}setData(t){this.editor&&this.editor.setData(t)}destroy(){this.editor&&(this.editor.destroy().catch(t=>{}),this.editor=null)}}class u{constructor(t,e){this.loader=t,this.uploadUrl=e}upload(){return this.loader.file.then(t=>new Promise((e,n)=>{this._initRequest(),this._initListeners(e,n,t),this._sendRequest(t)}))}abort(){this.xhr&&this.xhr.abort()}_initRequest(){const t=this.xhr=new XMLHttpRequest;t.open("POST",this.uploadUrl,!0),t.responseType="json";const e=s.getToken();e&&t.setRequestHeader("Authorization",`Bearer ${e}`)}_initListeners(t,e,n){const a=this.xhr,s=this.loader,i=`無法上傳檔案: ${n.name}`;a.addEventListener("error",()=>e(i)),a.addEventListener("abort",()=>e()),a.addEventListener("load",()=>{const n=a.response;if(!n||n.error)return e(n&&n.error?n.error.message:i);t({default:n.url})}),a.upload&&a.upload.addEventListener("progress",t=>{t.lengthComputable&&(s.uploadTotal=t.total,s.uploaded=t.loaded)})}_sendRequest(t){const e=new FormData;e.append("upload",t),this.xhr.send(e)}}let m=null,p=!1,h=null;async function b(a=null){let s=null;if(f(),a){d.show("載入文章中...");try{s=(await n.get(a)).data}catch(u){return d.hide(),o.error("載入文章失敗"),void i.navigate("/admin/posts")}d.hide()}const l=`\n    <div>\n      <div class="flex items-center justify-between mb-8">\n        <h1 class="text-3xl font-bold text-modern-900">\n          ${a?"編輯文章":"新增文章"}\n        </h1>\n        <a href="/admin/posts" class="text-modern-600 hover:text-modern-900">\n          ← 返回列表\n        </a>\n      </div>\n      \n      <form id="post-form" class="space-y-6">\n        \x3c!-- 標題 --\x3e\n        <div class="card">\n          <label for="title" class="block text-sm font-medium text-modern-700 mb-2">\n            文章標題 *\n          </label>\n          <input\n            type="text"\n            id="title"\n            name="title"\n            required\n            value="${(null==s?void 0:s.title)||""}"\n            class="input-field text-2xl"\n            placeholder="輸入文章標題..."\n          />\n          <p class="text-red-500 text-sm mt-1 hidden" data-error-for="title"></p>\n        </div>\n        \n        \x3c!-- 內容編輯器 --\x3e\n        <div class="card">\n          <label class="block text-sm font-medium text-modern-700 mb-2">\n            文章內容 *\n          </label>\n          <div id="editor-container">\n            <div id="content"></div>\n          </div>\n          <p class="text-red-500 text-sm mt-1 hidden" data-error-for="content"></p>\n          <p class="text-sm text-modern-500 mt-2 flex items-center gap-2">\n            <span class="inline-block w-2 h-2 bg-green-500 rounded-full animate-pulse"></span>\n            自動儲存已啟用（每 30 秒）\n          </p>\n        </div>\n        \n        \x3c!-- 設定 --\x3e\n        <div class="card">\n          <h3 class="text-lg font-semibold text-modern-900 mb-4">發布設定</h3>\n          \n          <div class="space-y-4">\n            <div>\n              <label for="status" class="block text-sm font-medium text-modern-700 mb-2">\n                狀態\n              </label>\n              <select id="status" name="status" class="input-field">\n                <option value="draft" ${"draft"===(null==s?void 0:s.status)?"selected":""}>草稿</option>\n                <option value="published" ${"published"===(null==s?void 0:s.status)?"selected":""}>已發布</option>\n              </select>\n            </div>\n            \n            <div>\n              <label for="publish_date" class="block text-sm font-medium text-modern-700 mb-2">\n                發布日期與時間\n              </label>\n              <input\n                type="datetime-local"\n                id="publish_date"\n                name="publish_date"\n                class="input-field"\n                value="${(null==s?void 0:s.publish_date)?new Date(s.publish_date).toISOString().slice(0,16):""}"\n              />\n              <p class="text-sm text-modern-500 mt-1">\n                留空則使用當前時間。設定未來時間可實現定時發布。\n              </p>\n            </div>\n            \n            <div>\n              <label for="excerpt" class="block text-sm font-medium text-modern-700 mb-2">\n                摘要（選填）\n              </label>\n              <textarea\n                id="excerpt"\n                name="excerpt"\n                rows="3"\n                class="input-field"\n                placeholder="文章摘要，將顯示在列表中..."\n              >${(null==s?void 0:s.excerpt)||""}</textarea>\n            </div>\n          </div>\n        </div>\n        \n        \x3c!-- 操作按鈕 --\x3e\n        <div class="flex items-center justify-between">\n          <button type="button" id="cancel-btn" class="btn-secondary">\n            取消\n          </button>\n          <div class="flex gap-3">\n            <button type="button" id="save-draft-btn" class="btn-secondary">\n              儲存草稿\n            </button>\n            <button type="submit" id="submit-btn" class="btn-primary">\n              ${a?"更新文章":"發布文章"}\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  `;document.getElementById("app").innerHTML=t(l),e(),await async function(t){try{m=new c("content",{initialData:(null==t?void 0:t.content)||"",placeholder:"開始撰寫您的文章內容...",onChange:()=>{p=!0}}),await m.init(),o.success("編輯器已準備就緒")}catch(u){o.error("編輯器初始化失敗")}}(s),function(t){const e=document.getElementById("post-form");document.getElementById("submit-btn");const n=document.getElementById("save-draft-btn"),a=document.getElementById("cancel-btn");e.addEventListener("submit",async e=>{e.preventDefault(),await v(t,"published")}),n.addEventListener("click",async()=>{await v(t,"draft")}),a.addEventListener("click",async()=>{if(p){if(!(await r()))return}f(),i.navigate("/admin/posts")})}(a),function(t){if(!t)return;h=setInterval(async()=>{if(p)try{const e=document.getElementById("post-form"),a={title:e.title.value,content:m.getData(),status:e.status.value,excerpt:e.excerpt.value};await n.update(t,a),p=!1}catch(u){}},3e4)}(a),window.addEventListener("beforeunload",t=>{p&&(t.preventDefault(),t.returnValue="")})}function f(){m&&(m.destroy(),m=null),h&&(clearInterval(h),h=null),p=!1}async function v(t,e){const a=document.getElementById("post-form"),s=document.getElementById("submit-btn"),l={title:a.title.value,content:m?m.getData():"",status:e||a.status.value,excerpt:a.excerpt.value};a.publish_date.value&&(l.publish_date=new Date(a.publish_date.value).toISOString()),document.querySelectorAll("[data-error-for]").forEach(t=>{t.textContent="",t.classList.add("hidden")});const r=s.textContent;s.disabled=!0,s.textContent="儲存中...";try{if(t)await n.update(t,l),p=!1,o.success("文章已更新");else{const t=await n.create(l);p=!1,o.success("文章已建立"),setTimeout(()=>{i.navigate(`/admin/posts/${t.id}/edit`)},1e3)}}catch(c){c.isValidationError()?(d=c.getValidationErrors(),Object.entries(d).forEach(([t,e])=>{const n=document.querySelector(`[data-error-for="${t}"]`);n&&(n.textContent=Array.isArray(e)?e[0]:e,n.classList.remove("hidden"))})):o.error(c.getUserMessage())}finally{s.disabled=!1,s.textContent=r}var d}export{b as renderPostEditor};
