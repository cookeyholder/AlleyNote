const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/users-nxFUwfS-.js","assets/index-DHmEDfox.js","assets/vendor-core-DW9qjkZC.js","assets/index-CpXvHIny.css"])))=>i.map(i=>d[i]);
import{_ as e}from"./index-DHmEDfox.js";import{r as t,b as n}from"./DashboardLayout-BjmJ-OJc.js";import{usersAPI as s}from"./users-nxFUwfS-.js";import{t as r}from"./toast-ChPGQGGG.js";import{M as o}from"./Modal-oATPHkxR.js";import"./vendor-core-DW9qjkZC.js";class a{constructor(){this.users=[],this.roles=[],this.loading=!1,this.currentPage=1,this.totalPages=1,this.editingUser=null,this.modal=null}async init(){await Promise.all([this.loadUsers(),this.loadRoles()])}async loadRoles(){try{const{rolesAPI:t}=await e(async()=>{const{rolesAPI:e}=await import("./users-nxFUwfS-.js");return{rolesAPI:e}},__vite__mapDeps([0,1,2,3])),n=await t.list();this.roles=n.data||[]}catch(t){this.roles=[]}}async loadUsers(e=1){var t;try{this.loading=!0,this.currentPage=e,this.render();const n=await s.list({page:e});this.users=n.data||[],this.totalPages=(null==(t=n.pagination)?void 0:t.last_page)||1,this.loading=!1,this.render()}catch(n){r.error("載入使用者列表失敗"),this.loading=!1,this.render()}}render(){const e=`\n      <div class="max-w-7xl mx-auto">\n        <div class="flex items-center justify-between mb-8">\n          <h1 class="text-3xl font-bold text-modern-900">使用者管理</h1>\n          <button \n            id="addUserBtn" \n            class="px-6 py-3 bg-accent-600 text-white rounded-lg hover:bg-accent-700 transition-colors font-medium"\n          >\n            <i class="fas fa-plus mr-2"></i>\n            新增使用者\n          </button>\n        </div>\n\n        ${this.renderUsersList()}\n      </div>\n\n      \x3c!-- Modal 容器 --\x3e\n      <div id="modal-container"></div>\n    `;document.getElementById("app").innerHTML=t(e),n(),this.attachEventListeners()}renderUsersList(){return this.loading?'\n        <div class="bg-white rounded-2xl border border-modern-200 p-8">\n          <div class="text-center text-modern-500">\n            <i class="fas fa-spinner fa-spin text-4xl mb-4"></i>\n            <p>載入中...</p>\n          </div>\n        </div>\n      ':0===this.users.length?'\n        <div class="bg-white rounded-2xl border border-modern-200 p-8">\n          <div class="text-center text-modern-500">\n            <i class="fas fa-users text-4xl mb-4"></i>\n            <p>尚無使用者資料</p>\n          </div>\n        </div>\n      ':`\n      <div class="bg-white rounded-2xl border border-modern-200 overflow-hidden">\n        <div class="overflow-x-auto">\n          <table class="w-full">\n            <thead class="bg-modern-50 border-b border-modern-200">\n              <tr>\n                <th class="px-6 py-4 text-left text-sm font-semibold text-modern-700">使用者名稱</th>\n                <th class="px-6 py-4 text-left text-sm font-semibold text-modern-700">電子郵件</th>\n                <th class="px-6 py-4 text-left text-sm font-semibold text-modern-700">角色</th>\n                <th class="px-6 py-4 text-left text-sm font-semibold text-modern-700">註冊日期</th>\n                <th class="px-6 py-4 text-left text-sm font-semibold text-modern-700">上次登入</th>\n                <th class="px-6 py-4 text-right text-sm font-semibold text-modern-700">操作</th>\n              </tr>\n            </thead>\n            <tbody class="divide-y divide-modern-100">\n              ${this.users.map(e=>this.renderUserRow(e)).join("")}\n            </tbody>\n          </table>\n        </div>\n\n        ${this.renderPagination()}\n      </div>\n    `}renderUserRow(e){const t=e.roles||[],n=t.length>0?t[0]:null,s=(null==n?void 0:n.display_name)||(null==n?void 0:n.name)||"無角色",r=s.includes("超級管理員")||"super_admin"===(null==n?void 0:n.name);return`\n      <tr class="hover:bg-modern-50 transition-colors">\n        <td class="px-6 py-4">\n          <div class="flex items-center gap-3">\n            <div class="w-10 h-10 rounded-full bg-accent-500 flex items-center justify-center text-white font-semibold">\n              ${(e.username||"U")[0].toUpperCase()}\n            </div>\n            <span class="font-medium text-modern-900">${this.escapeHtml(e.username)}</span>\n          </div>\n        </td>\n        <td class="px-6 py-4 text-modern-700">${this.escapeHtml(e.email)}</td>\n        <td class="px-6 py-4">\n          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${r?"bg-purple-100 text-purple-800":"bg-blue-100 text-blue-800"}">\n            ${this.escapeHtml(s)}\n          </span>\n        </td>\n        <td class="px-6 py-4 text-modern-700">${this.formatDate(e.created_at)}</td>\n        <td class="px-6 py-4 text-modern-700">${this.formatDate(e.last_login)}</td>\n        <td class="px-6 py-4">\n          <div class="flex items-center justify-end gap-2">\n            <button \n              class="edit-user-btn px-4 py-2 text-sm font-medium text-accent-700 border-2 border-accent-600 rounded-lg hover:bg-accent-50 transition-colors"\n              data-user-id="${e.id}"\n            >\n              編輯\n            </button>\n            <button \n              class="delete-user-btn px-4 py-2 text-sm font-medium text-red-700 border-2 border-red-600 rounded-lg hover:bg-red-50 transition-colors"\n              data-user-id="${e.id}"\n            >\n              刪除\n            </button>\n          </div>\n        </td>\n      </tr>\n    `}renderPagination(){return this.totalPages<=1?"":`\n      <div class="flex items-center justify-between px-6 py-4 border-t border-modern-200">\n        <div class="text-sm text-modern-600">\n          第 ${this.currentPage} / ${this.totalPages} 頁\n        </div>\n        <div class="flex gap-2">\n          <button \n            id="prevPageBtn" \n            class="px-4 py-2 text-sm font-medium text-modern-700 border-2 border-modern-300 rounded-lg hover:bg-modern-50 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"\n            ${this.currentPage<=1?"disabled":""}\n          >\n            上一頁\n          </button>\n          <button \n            id="nextPageBtn" \n            class="px-4 py-2 text-sm font-medium text-modern-700 border-2 border-modern-300 rounded-lg hover:bg-modern-50 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"\n            ${this.currentPage>=this.totalPages?"disabled":""}\n          >\n            下一頁\n          </button>\n        </div>\n      </div>\n    `}attachEventListeners(){const e=document.getElementById("addUserBtn");e&&e.addEventListener("click",()=>this.showUserModal());document.querySelectorAll(".edit-user-btn").forEach(e=>{e.addEventListener("click",async()=>{const t=parseInt(e.dataset.userId),n=this.users.find(e=>e.id===t);n&&this.showUserModal(n)})});document.querySelectorAll(".delete-user-btn").forEach(e=>{e.addEventListener("click",async()=>{const t=parseInt(e.dataset.userId);await this.handleDeleteUser(t)})});const t=document.getElementById("prevPageBtn");t&&t.addEventListener("click",()=>{this.currentPage>1&&this.loadUsers(this.currentPage-1)});const n=document.getElementById("nextPageBtn");n&&n.addEventListener("click",()=>{this.currentPage<this.totalPages&&this.loadUsers(this.currentPage+1)})}showUserModal(e=null){var t,n;const s=!!e,r=s?"編輯使用者":"新增使用者",a=(null==(t=null==e?void 0:e.roles)?void 0:t.map(e=>e.id))||[],i=a.length>0?a[0]:(null==(n=this.roles[0])?void 0:n.id)||"",d=`\n      <form id="userForm" class="space-y-6">\n        <div>\n          <label for="username" class="block text-sm font-medium text-modern-700 mb-2">\n            使用者名稱 *\n          </label>\n          <input\n            type="text"\n            id="username"\n            name="username"\n            value="${e?this.escapeHtml(e.username):""}"\n            class="w-full px-4 py-3 rounded-lg border border-modern-300 focus:outline-none focus:ring-2 focus:ring-accent-500"\n            required\n            minlength="3"\n            maxlength="50"\n          />\n        </div>\n\n        <div>\n          <label for="email" class="block text-sm font-medium text-modern-700 mb-2">\n            電子郵件 *\n          </label>\n          <input\n            type="email"\n            id="email"\n            name="email"\n            value="${e?this.escapeHtml(e.email):""}"\n            class="w-full px-4 py-3 rounded-lg border border-modern-300 focus:outline-none focus:ring-2 focus:ring-accent-500"\n            required\n          />\n        </div>\n\n        <div>\n          <label for="role_id" class="block text-sm font-medium text-modern-700 mb-2">\n            角色 *\n          </label>\n          <select\n            id="role_id"\n            name="role_id"\n            class="w-full px-4 py-3 rounded-lg border border-modern-300 focus:outline-none focus:ring-2 focus:ring-accent-500"\n            required\n          >\n            ${this.roles.length>0?this.roles.map(e=>`\n                <option value="${e.id}" ${e.id===i?"selected":""}>\n                  ${this.escapeHtml(e.display_name||e.name||"未知角色")}\n                </option>\n              `).join(""):'<option value="">載入角色中...</option>'}\n          </select>\n        </div>\n\n        ${s?"":'\n          <div>\n            <label for="password" class="block text-sm font-medium text-modern-700 mb-2">\n              密碼 *\n            </label>\n            <input\n              type="password"\n              id="password"\n              name="password"\n              class="w-full px-4 py-3 rounded-lg border border-modern-300 focus:outline-none focus:ring-2 focus:ring-accent-500"\n              required\n              minlength="8"\n            />\n            <p class="mt-1 text-sm text-modern-500">密碼長度至少 8 個字元</p>\n          </div>\n\n          <div>\n            <label for="password_confirmation" class="block text-sm font-medium text-modern-700 mb-2">\n              確認密碼 *\n            </label>\n            <input\n              type="password"\n              id="password_confirmation"\n              name="password_confirmation"\n              class="w-full px-4 py-3 rounded-lg border border-modern-300 focus:outline-none focus:ring-2 focus:ring-accent-500"\n              required\n              minlength="8"\n            />\n          </div>\n        '}\n\n        <div class="flex justify-end gap-3 pt-4">\n          <button\n            type="button"\n            id="cancelModalBtn"\n            class="px-6 py-3 text-sm font-medium text-modern-700 border-2 border-modern-300 rounded-lg hover:bg-modern-50 transition-colors"\n          >\n            取消\n          </button>\n          <button\n            type="submit"\n            class="px-6 py-3 text-sm font-medium text-white bg-accent-600 rounded-lg hover:bg-accent-700 transition-colors"\n          >\n            ${s?"儲存變更":"新增使用者"}\n          </button>\n        </div>\n      </form>\n    `;this.modal=new o({title:r,content:d,size:"lg",showFooter:!1}),this.modal.show();const l=document.getElementById("userForm");l&&l.addEventListener("submit",async t=>{t.preventDefault(),s?await this.handleUpdateUser(e.id,new FormData(l)):await this.handleCreateUser(new FormData(l))});const c=document.getElementById("cancelModalBtn");c&&c.addEventListener("click",()=>this.modal.hide())}async handleCreateUser(e){try{const t={username:e.get("username"),email:e.get("email"),role_ids:[parseInt(e.get("role_id"))],password:e.get("password"),password_confirmation:e.get("password_confirmation")};if(!t.username||t.username.length<3)return void r.error("使用者名稱至少需要 3 個字元");if(!t.email||!this.isValidEmail(t.email))return void r.error("請輸入有效的電子郵件");if(!t.password||t.password.length<8)return void r.error("密碼長度至少需要 8 個字元");if(t.password!==t.password_confirmation)return void r.error("密碼與確認密碼不符");await s.create(t),r.success("使用者建立成功"),this.modal.hide(),await this.loadUsers(this.currentPage)}catch(t){r.error(t.message||"建立使用者失敗")}}async handleUpdateUser(e,t){try{const n={username:t.get("username"),email:t.get("email"),role_ids:[parseInt(t.get("role_id"))]};if(!n.username||n.username.length<3)return void r.error("使用者名稱至少需要 3 個字元");if(!n.email||!this.isValidEmail(n.email))return void r.error("請輸入有效的電子郵件");await s.update(e,n),r.success("使用者更新成功"),this.modal.hide(),await this.loadUsers(this.currentPage)}catch(n){r.error(n.message||"更新使用者失敗")}}async handleDeleteUser(e){const t=this.users.find(t=>t.id===e);if(t&&confirm(`確定要刪除使用者「${t.username}」嗎？此操作無法復原。`))try{await s.delete(e),r.success("使用者刪除成功"),await this.loadUsers(this.currentPage)}catch(n){r.error(n.message||"刪除使用者失敗")}}escapeHtml(e){const t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return e?String(e).replace(/[&<>"']/g,e=>t[e]):""}formatDate(e){if(!e)return"-";const t=new Date(e);return new Intl.DateTimeFormat("zh-TW",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit"}).format(t)}isValidEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}}export{a as default};
