import{r as t,b as e}from"./DashboardLayout-BjmJ-OJc.js";import{t as n}from"./toast-ChPGQGGG.js";import{M as a}from"./Modal-oATPHkxR.js";import{c as s}from"./index-DHmEDfox.js";import"./vendor-core-DW9qjkZC.js";class r{constructor(){this.tags=[],this.loading=!1,this.modal=null}async init(){await this.loadTags()}async loadTags(){var t;try{this.loading=!0,this.render();const e=await s.get("/api/tags");this.tags=(null==(t=e.data)?void 0:t.data)||[],this.loading=!1,this.render()}catch(e){n.error("載入標籤列表失敗"),this.loading=!1,this.render()}}render(){const n=`\n      <div class="max-w-7xl mx-auto">\n        <div class="flex items-center justify-between mb-8">\n          <h1 class="text-3xl font-bold text-modern-900">標籤管理</h1>\n          <button \n            id="addTagBtn" \n            class="px-6 py-3 bg-accent-600 text-white rounded-lg hover:bg-accent-700 transition-colors font-medium"\n          >\n            <i class="fas fa-plus mr-2"></i>\n            新增標籤\n          </button>\n        </div>\n\n        ${this.renderTagsList()}\n      </div>\n\n      \x3c!-- Modal 容器 --\x3e\n      <div id="modal-container"></div>\n    `;document.getElementById("app").innerHTML=t(n),e(),this.attachEventListeners()}renderTagsList(){return this.loading?'\n        <div class="bg-white rounded-2xl border border-modern-200 p-8">\n          <div class="text-center text-modern-500">\n            <i class="fas fa-spinner fa-spin text-4xl mb-4"></i>\n            <p>載入中...</p>\n          </div>\n        </div>\n      ':0===this.tags.length?'\n        <div class="bg-white rounded-2xl border border-modern-200 p-8">\n          <div class="text-center text-modern-500">\n            <i class="fas fa-tags text-4xl mb-4"></i>\n            <p>尚無標籤資料</p>\n          </div>\n        </div>\n      ':`\n      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">\n        ${this.tags.map(t=>this.renderTagCard(t)).join("")}\n      </div>\n    `}renderTagCard(t){const e=[{bg:"bg-blue-100",text:"text-blue-800",border:"border-blue-300"},{bg:"bg-green-100",text:"text-green-800",border:"border-green-300"},{bg:"bg-yellow-100",text:"text-yellow-800",border:"border-yellow-300"},{bg:"bg-purple-100",text:"text-purple-800",border:"border-purple-300"},{bg:"bg-pink-100",text:"text-pink-800",border:"border-pink-300"},{bg:"bg-indigo-100",text:"text-indigo-800",border:"border-indigo-300"}],n=e[t.id%e.length];return`\n      <div class="bg-white rounded-xl border-2 ${n.border} p-6 hover:shadow-lg transition-shadow">\n        <div class="flex items-start justify-between mb-4">\n          <div class="flex-1">\n            <h3 class="text-lg font-semibold ${n.text} mb-2">${this.escapeHtml(t.name)}</h3>\n            ${t.description?`\n              <p class="text-sm text-modern-600">${this.escapeHtml(t.description)}</p>\n            `:""}\n          </div>\n          <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium ${n.bg} ${n.text}">\n            ${t.post_count||0} 篇\n          </span>\n        </div>\n\n        <div class="flex items-center gap-2 pt-4 border-t border-modern-100">\n          <button \n            class="edit-tag-btn flex-1 px-4 py-2 text-sm font-medium text-accent-700 border-2 border-accent-600 rounded-lg hover:bg-accent-50 transition-colors"\n            data-tag-id="${t.id}"\n          >\n            <i class="fas fa-edit mr-1"></i> 編輯\n          </button>\n          <button \n            class="delete-tag-btn flex-1 px-4 py-2 text-sm font-medium text-red-700 border-2 border-red-600 rounded-lg hover:bg-red-50 transition-colors"\n            data-tag-id="${t.id}"\n          >\n            <i class="fas fa-trash mr-1"></i> 刪除\n          </button>\n        </div>\n      </div>\n    `}attachEventListeners(){const t=document.getElementById("addTagBtn");t&&t.addEventListener("click",()=>this.showTagModal());document.querySelectorAll(".edit-tag-btn").forEach(t=>{t.addEventListener("click",()=>{const e=parseInt(t.dataset.tagId),n=this.tags.find(t=>t.id===e);n&&this.showTagModal(n)})});document.querySelectorAll(".delete-tag-btn").forEach(t=>{t.addEventListener("click",async()=>{const e=parseInt(t.dataset.tagId);await this.handleDeleteTag(e)})})}showTagModal(t=null){const e=!!t,n=e?"編輯標籤":"新增標籤",s=`\n      <form id="tagForm" class="space-y-6">\n        <div>\n          <label for="name" class="block text-sm font-medium text-modern-700 mb-2">\n            標籤名稱 *\n          </label>\n          <input\n            type="text"\n            id="name"\n            name="name"\n            value="${t?this.escapeHtml(t.name):""}"\n            class="w-full px-4 py-3 rounded-lg border border-modern-300 focus:outline-none focus:ring-2 focus:ring-accent-500"\n            required\n            maxlength="50"\n            placeholder="例如：前端開發"\n          />\n        </div>\n\n        <div>\n          <label for="slug" class="block text-sm font-medium text-modern-700 mb-2">\n            別名 (URL Slug)\n          </label>\n          <input\n            type="text"\n            id="slug"\n            name="slug"\n            value="${t?this.escapeHtml(t.slug||""):""}"\n            class="w-full px-4 py-3 rounded-lg border border-modern-300 focus:outline-none focus:ring-2 focus:ring-accent-500"\n            maxlength="50"\n            placeholder="例如：frontend-dev（選填，自動生成）"\n          />\n          <p class="mt-1 text-sm text-modern-500">用於 URL，若留空則自動生成</p>\n        </div>\n\n        <div>\n          <label for="description" class="block text-sm font-medium text-modern-700 mb-2">\n            描述\n          </label>\n          <textarea\n            id="description"\n            name="description"\n            rows="3"\n            class="w-full px-4 py-3 rounded-lg border border-modern-300 focus:outline-none focus:ring-2 focus:ring-accent-500"\n            maxlength="200"\n            placeholder="標籤的簡短描述（選填）"\n          >${t?this.escapeHtml(t.description||""):""}</textarea>\n        </div>\n\n        <div class="flex justify-end gap-3 pt-4">\n          <button\n            type="button"\n            id="cancelModalBtn"\n            class="px-6 py-3 text-sm font-medium text-modern-700 border-2 border-modern-300 rounded-lg hover:bg-modern-50 transition-colors"\n          >\n            取消\n          </button>\n          <button\n            type="submit"\n            class="px-6 py-3 text-sm font-medium text-white bg-accent-600 rounded-lg hover:bg-accent-700 transition-colors"\n          >\n            ${e?"儲存變更":"新增標籤"}\n          </button>\n        </div>\n      </form>\n    `;this.modal=new a(n,s),this.modal.show();const r=document.getElementById("tagForm");r&&r.addEventListener("submit",async n=>{n.preventDefault(),e?await this.handleUpdateTag(t.id,new FormData(r)):await this.handleCreateTag(new FormData(r))});const d=document.getElementById("cancelModalBtn");d&&d.addEventListener("click",()=>this.modal.hide())}async handleCreateTag(t){try{const e={name:t.get("name"),slug:t.get("slug")||void 0,description:t.get("description")||void 0};if(!e.name||0===e.name.trim().length)return void n.error("請輸入標籤名稱");await s.post("/api/tags",e),n.success("標籤建立成功"),this.modal.hide(),await this.loadTags()}catch(e){n.error(e.message||"建立標籤失敗")}}async handleUpdateTag(t,e){try{const a={name:e.get("name"),slug:e.get("slug")||void 0,description:e.get("description")||void 0};if(!a.name||0===a.name.trim().length)return void n.error("請輸入標籤名稱");await s.put(`/api/tags/${t}`,a),n.success("標籤更新成功"),this.modal.hide(),await this.loadTags()}catch(a){n.error(a.message||"更新標籤失敗")}}async handleDeleteTag(t){const e=this.tags.find(e=>e.id===t);if(!e)return;const a=e.post_count||0;let r=`確定要刪除標籤「${e.name}」嗎？`;if(a>0&&(r+=`\n\n此標籤目前有 ${a} 篇文章使用，刪除後這些文章將會移除此標籤。`),confirm(r))try{await s.delete(`/api/tags/${t}`),n.success("標籤刪除成功"),await this.loadTags()}catch(d){n.error(d.message||"刪除標籤失敗")}}escapeHtml(t){const e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return t?String(t).replace(/[&<>"']/g,t=>e[t]):""}}export{r as default};
