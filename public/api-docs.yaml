openapi: 3.0.0
info:
  title: 'AlleyNote API'
  description: 'AlleyNote 公布欄系統 RESTful API 文件。提供文章管理、使用者認證、IP 管理等功能的完整 API 介面。'
  termsOfService: 'https://alleynote.example.com/terms'
  contact:
    name: 'AlleyNote 開發團隊'
    url: 'https://github.com/alleynote/alleynote'
    email: dev@alleynote.example.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  version: 1.0.0
servers:
  -
    url: 'http://localhost/api'
    description: '開發環境 API 伺服器'
  -
    url: 'https://api.alleynote.example.com'
    description: '正式環境 API 伺服器'
paths:
  '/posts/{post_id}/attachments':
    get:
      tags:
        - attachments
      summary: 取得貼文附件列表
      description: 取得指定貼文的所有附件檔案清單
      operationId: listAttachments
      parameters:
        -
          name: post_id
          in: path
          description: '貼文 ID'
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: 成功取得附件列表
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { properties: { id: { type: string, example: 550e8400-e29b-41d4-a716-446655440000 }, post_id: { type: integer, example: 1 }, filename: { type: string, example: document.pdf }, original_name: { type: string, example: 重要文件.pdf }, file_size: { description: 檔案大小（位元組）, type: integer, example: 1024000 }, mime_type: { type: string, example: application/pdf }, download_url: { type: string, example: /api/attachments/550e8400-e29b-41d4-a716-446655440000/download }, uploaded_by: { type: integer, example: 1 }, created_at: { type: string, format: date-time, example: '2025-01-15T10:30:00Z' } }, type: object } }
                type: object
        '404':
          description: 貼文不存在
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
    post:
      tags:
        - attachments
      summary: 上傳文件附件
      description: 為指定貼文上傳附件檔案，支援多種檔案格式
      operationId: uploadAttachment
      parameters:
        -
          name: post_id
          in: path
          description: '貼文 ID'
          required: true
          schema:
            type: integer
            minimum: 1
      requestBody:
        description: 上傳的檔案
        required: true
        content:
          multipart/form-data:
            schema:
              required:
                - file
              properties:
                file:
                  description: 要上傳的檔案
                  type: string
                  format: binary
              type: object
      responses:
        '201':
          description: 檔案上傳成功
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  message: { type: string, example: 檔案上傳成功 }
                  data: { properties: { id: { type: string, example: 550e8400-e29b-41d4-a716-446655440000 }, post_id: { type: integer, example: 1 }, filename: { type: string, example: document.pdf }, original_name: { type: string, example: 重要文件.pdf }, file_size: { description: 檔案大小（位元組）, type: integer, example: 1024000 }, mime_type: { type: string, example: application/pdf }, download_url: { type: string, example: /api/attachments/550e8400-e29b-41d4-a716-446655440000/download }, uploaded_by: { type: integer, example: 1 }, created_at: { type: string, format: date-time, example: '2025-01-15T10:30:00Z' } }, type: object }
                type: object
        '400':
          description: 檔案上傳失敗或格式不支援
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 不支援的檔案格式 }
                type: object
        '401':
          description: 未授權存取
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Unauthorized'
        '404':
          description: 貼文不存在
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
        '413':
          description: 檔案大小超過限制
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: '檔案大小超過 10MB 限制' }
                type: object
      security:
        -
          bearerAuth: []
        -
          sessionAuth: []
  '/attachments/{id}/download':
    get:
      tags:
        - attachments
      summary: 下載附件
      description: 下載指定的附件檔案
      operationId: downloadAttachment
      parameters:
        -
          name: id
          in: path
          description: '附件 UUID'
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 檔案下載成功
          headers: {  }
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          description: 無效的附件識別碼
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 無效的附件識別碼 }
                type: object
        '404':
          description: 附件不存在
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
        '410':
          description: 檔案已不存在
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 檔案已被刪除或移動 }
                type: object
  '/attachments/{id}':
    delete:
      tags:
        - attachments
      summary: 刪除附件
      description: 刪除指定的附件檔案，只有上傳者或管理員可以刪除
      operationId: deleteAttachment
      parameters:
        -
          name: id
          in: path
          description: '附件 UUID'
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: 附件刪除成功
        '400':
          description: 無效的附件識別碼
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 無效的附件識別碼 }
                type: object
        '401':
          description: 未授權存取
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Unauthorized'
        '403':
          description: 無權限刪除此附件
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 您沒有權限刪除此附件 }
                type: object
        '404':
          description: 附件不存在
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
      security:
        -
          bearerAuth: []
        -
          sessionAuth: []
  /auth/register:
    post:
      tags:
        - auth
      summary: 使用者註冊
      description: 建立新的使用者帳號，需要提供使用者名稱、電子郵件和密碼
      operationId: registerUser
      requestBody:
        description: 註冊資料
        required: true
        content:
          application/json:
            schema:
              required:
                - username
                - email
                - password
                - password_confirmation
              properties:
                username:
                  description: 使用者名稱
                  type: string
                  maxLength: 50
                  minLength: 3
                  example: johndoe
                email:
                  description: 電子郵件地址
                  type: string
                  format: email
                  example: john@example.com
                password:
                  description: 密碼，至少8個字元
                  type: string
                  format: password
                  minLength: 8
                  example: password123
                password_confirmation:
                  description: 確認密碼，必須與密碼相同
                  type: string
                  format: password
                  example: password123
              type: object
      responses:
        '201':
          description: 註冊成功
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  message: { type: string, example: 註冊成功 }
                  data: { properties: { id: { type: integer, example: 1 }, username: { type: string, example: johndoe }, email: { type: string, example: john@example.com }, role: { type: string, example: user }, created_at: { type: string, format: date-time, example: '2025-01-15T10:30:00Z' } }, type: object }
                type: object
        '400':
          description: 註冊資料驗證失敗
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  error: { type: string, example: 資料驗證失敗 }
                  errors: { type: object, example: { username: [使用者名稱已存在], email: [電子郵件格式不正確], password: [密碼長度不足8個字元] }, additionalProperties: { type: array, items: { type: string } } }
                type: object
        '409':
          description: 使用者名稱或電子郵件已存在
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  error: { type: string, example: 使用者名稱或電子郵件已存在 }
                type: object
        '500':
          description: 伺服器內部錯誤
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  error: { type: string, example: 系統發生錯誤 }
                type: object
  /auth/login:
    post:
      tags:
        - auth
      summary: 使用者登入
      description: 使用帳號密碼或電子郵件密碼進行登入驗證
      operationId: loginUser
      requestBody:
        description: 登入憑證
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: 登入成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: 登入資料格式錯誤
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  error: { type: string, example: 缺少必要的登入資料 }
                type: object
        '401':
          description: 登入失敗
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  error: { type: string, example: 使用者名稱或密碼錯誤 }
                type: object
        '423':
          description: 帳號被鎖定
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  error: { type: string, example: 帳號暫時被鎖定，請稍後再試 }
                  retry_after: { description: 解鎖剩餘秒數, type: integer, example: 300 }
                type: object
        '500':
          description: 伺服器內部錯誤
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  error: { type: string, example: 系統發生錯誤 }
                type: object
  /auth/logout:
    post:
      tags:
        - auth
      summary: 使用者登出
      description: 登出當前使用者，清除認證狀態和會話
      operationId: logoutUser
      responses:
        '200':
          description: 登出成功
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  message: { type: string, example: 登出成功 }
                type: object
        '401':
          description: '未授權存取或 Token 無效'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Unauthorized'
      security:
        -
          bearerAuth: []
        -
          sessionAuth: []
  /auth/me:
    get:
      tags:
        - auth
      summary: 取得當前使用者資訊
      description: 取得目前登入使用者的詳細資訊
      operationId: getCurrentUser
      responses:
        '200':
          description: 成功取得使用者資訊
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  data: { $ref: '#/components/schemas/User' }
                type: object
        '401':
          description: '未授權存取或 Token 無效'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Unauthorized'
      security:
        -
          bearerAuth: []
        -
          sessionAuth: []
  /auth/refresh:
    post:
      tags:
        - auth
      summary: '刷新認證 Token'
      description: '使用 Refresh Token 取得新的 Access Token'
      operationId: refreshToken
      requestBody:
        description: 'Refresh Token'
        required: true
        content:
          application/json:
            schema:
              required:
                - refresh_token
              properties:
                refresh_token:
                  description: '有效的 Refresh Token'
                  type: string
                  example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
              type: object
      responses:
        '200':
          description: 'Token 刷新成功'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  message: { type: string, example: 'Token 刷新成功' }
                  access_token: { type: string, example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9... }
                  token_type: { type: string, example: Bearer }
                  expires_in: { description: 'Token 有效期（秒）', type: integer, example: 3600 }
                  expires_at: { type: string, format: date-time, example: '2025-01-15T11:30:00Z' }
                type: object
        '400':
          description: '缺少或格式錯誤的 Refresh Token'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  error: { type: string, example: '無效的 refresh_token 格式' }
                type: object
        '401':
          description: 'Refresh Token 無效或已過期'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  error: { type: string, example: 'Refresh token 無效或已過期' }
                type: object
  /posts:
    get:
      tags:
        - posts
      summary: 取得所有貼文
      description: 取得分頁的貼文列表，支援搜尋和篩選
      operationId: getPosts
      parameters:
        -
          name: page
          in: query
          description: 頁碼
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        -
          name: limit
          in: query
          description: 每頁筆數
          required: false
          schema:
            type: integer
            default: 10
            maximum: 100
            minimum: 1
        -
          name: search
          in: query
          description: 搜尋關鍵字
          required: false
          schema:
            type: string
        -
          name: category
          in: query
          description: 貼文分類篩選
          required: false
          schema:
            type: string
            enum:
              - general
              - announcement
              - urgent
              - notice
        -
          name: status
          in: query
          description: 貼文狀態篩選
          required: false
          schema:
            type: string
            enum:
              - draft
              - published
              - archived
      responses:
        '200':
          description: 成功取得貼文列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
        '400':
          description: 請求參數錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
    post:
      tags:
        - posts
      summary: 建立新貼文
      description: '建立一篇新的貼文，需要 CSRF Token 驗證'
      operationId: createPost
      requestBody:
        description: 貼文資料
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostRequest'
      responses:
        '201':
          description: 貼文建立成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: 輸入資料驗證失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: 未授權存取
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Unauthorized'
        '403':
          description: 'CSRF Token 驗證失敗'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'CSRF token verification failed' }
                type: object
      security:
        -
          csrfToken: []
  '/posts/{id}':
    get:
      tags:
        - posts
      summary: 取得單一貼文
      description: '根據 ID 取得貼文詳細資訊，並記錄瀏覽次數'
      operationId: getPostById
      parameters:
        -
          name: id
          in: path
          description: '貼文 ID'
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: 成功取得貼文詳細資訊
          content:
            application/json:
              schema:
                properties:
                  data: { $ref: '#/components/schemas/Post' }
                type: object
        '404':
          description: 貼文不存在
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
    put:
      tags:
        - posts
      summary: 更新貼文
      description: '更新指定 ID 的貼文，需要 CSRF Token 驗證'
      operationId: updatePost
      parameters:
        -
          name: id
          in: path
          description: '貼文 ID'
          required: true
          schema:
            type: integer
            minimum: 1
      requestBody:
        description: 更新的貼文資料
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostRequest'
      responses:
        '200':
          description: 貼文更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: 輸入資料驗證失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: 未授權存取
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Unauthorized'
        '403':
          description: 'CSRF Token 驗證失敗'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'CSRF token verification failed' }
                type: object
        '404':
          description: 貼文不存在
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
      security:
        -
          csrfToken: []
    delete:
      tags:
        - posts
      summary: 刪除貼文
      description: '刪除指定 ID 的貼文，需要 CSRF Token 驗證'
      operationId: deletePost
      parameters:
        -
          name: id
          in: path
          description: '貼文 ID'
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '204':
          description: 貼文刪除成功
        '401':
          description: 未授權存取
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Unauthorized'
        '403':
          description: 'CSRF Token 驗證失敗'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'CSRF token verification failed' }
                type: object
        '404':
          description: 貼文不存在
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
      security:
        -
          csrfToken: []
  '/posts/{id}/pin':
    patch:
      tags:
        - posts
      summary: 更新貼文置頂狀態
      description: '設定或取消貼文的置頂狀態，需要 CSRF Token 驗證'
      operationId: togglePostPin
      parameters:
        -
          name: id
          in: path
          description: '貼文 ID'
          required: true
          schema:
            type: integer
            minimum: 1
      requestBody:
        description: 置頂狀態
        required: true
        content:
          application/json:
            schema:
              properties:
                pinned:
                  description: 是否置頂
                  type: boolean
                  example: true
              type: object
      responses:
        '200':
          description: 置頂狀態更新成功
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  message: { type: string, example: 置頂狀態已更新 }
                  data: { $ref: '#/components/schemas/Post' }
                type: object
        '400':
          description: 請求資料格式錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: 未授權存取
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Unauthorized'
        '403':
          description: 'CSRF Token 驗證失敗'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'CSRF token verification failed' }
                type: object
        '404':
          description: 貼文不存在
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
      security:
        -
          csrfToken: []
  /test:
    get:
      tags:
        - test
      operationId: 12ba09fbc5d7a076bc954517921b2485
      responses:
        '200':
          description: 'Test endpoint'
    post:
      tags:
        - test
      operationId: 8a558414ab4307ae10a3e1a3a9ac398c
      responses:
        '201':
          description: 'Test post endpoint'
components:
  schemas:
    User:
      title: 使用者
      description: 使用者資料結構
      properties:
        id:
          description: 使用者ID
          type: integer
          example: 1
        username:
          description: 使用者名稱
          type: string
          example: admin
        email:
          description: 電子郵件
          type: string
          format: email
          example: admin@example.com
        role:
          description: 使用者角色
          type: string
          enum:
            - admin
            - moderator
            - user
          example: admin
        created_at:
          description: 建立時間
          type: string
          format: date-time
          example: '2025-01-15T10:30:00Z'
      type: object
    LoginRequest:
      title: 登入請求
      description: 使用者登入請求
      required:
        - username
        - password
      properties:
        username:
          description: 使用者名稱
          type: string
          example: admin
        password:
          description: 密碼
          type: string
          format: password
          example: password123
        remember_me:
          description: 記住我
          type: boolean
          default: false
          example: false
      type: object
    LoginResponse:
      title: 登入回應
      description: 登入成功回應
      properties:
        success:
          description: 登入是否成功
          type: boolean
          example: true
        message:
          description: 回應訊息
          type: string
          example: 登入成功
        token:
          description: 'JWT Token'
          type: string
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
        user:
          $ref: '#/components/schemas/User'
        expires_at:
          description: 'Token 過期時間'
          type: string
          format: date-time
          example: '2025-01-16T10:30:00Z'
      type: object
    CreatePostRequest:
      title: 建立貼文請求
      description: 建立新貼文的請求資料
      required:
        - title
        - content
      properties:
        title:
          description: 貼文標題
          type: string
          maxLength: 255
          example: 重要公告
        content:
          description: 貼文內容
          type: string
          example: 這是一則重要公告內容
        category:
          description: 貼文分類
          type: string
          default: general
          enum:
            - general
            - announcement
            - urgent
            - notice
          example: announcement
        priority:
          description: 優先級
          type: string
          default: normal
          enum:
            - low
            - normal
            - high
            - urgent
          example: normal
        expires_at:
          description: 過期時間（可選）
          type: string
          format: date-time
          example: '2025-12-31T23:59:59Z'
          nullable: true
      type: object
    UpdatePostRequest:
      title: 更新貼文請求
      description: 更新貼文的請求資料
      properties:
        title:
          description: 貼文標題
          type: string
          maxLength: 255
          example: 更新後的標題
        content:
          description: 貼文內容
          type: string
          example: 更新後的內容
        category:
          description: 貼文分類
          type: string
          enum:
            - general
            - announcement
            - urgent
            - notice
          example: announcement
        status:
          description: 貼文狀態
          type: string
          enum:
            - draft
            - published
            - archived
          example: published
        priority:
          description: 優先級
          type: string
          enum:
            - low
            - normal
            - high
            - urgent
          example: normal
        expires_at:
          description: 過期時間
          type: string
          format: date-time
          example: '2025-12-31T23:59:59Z'
          nullable: true
      type: object
    ApiResponse:
      title: 'API 回應'
      description: '標準 API 回應格式'
      properties:
        success:
          description: 操作是否成功
          type: boolean
          example: true
        message:
          description: 回應訊息
          type: string
          example: 操作成功
        data:
          description: 回應資料
          oneOf:
            -
              $ref: '#/components/schemas/Post'
            -
              type: array
              items:
                $ref: '#/components/schemas/Post'
            -
              type: object
      type: object
    PaginatedResponse:
      title: 分頁回應
      description: 分頁資料回應格式
      properties:
        data:
          description: 資料項目
          type: array
          items:
            $ref: '#/components/schemas/Post'
        pagination:
          description: 分頁資訊
          properties:
            current_page:
              type: integer
              example: 1
            per_page:
              type: integer
              example: 10
            total:
              type: integer
              example: 50
            total_pages:
              type: integer
              example: 5
            has_next:
              type: boolean
              example: true
            has_prev:
              type: boolean
              example: false
          type: object
      type: object
    PostRequest:
      title: 貼文請求
      description: 建立或更新貼文的通用請求資料
      type: object
      allOf:
        -
          $ref: '#/components/schemas/CreatePostRequest'
    ValidationError:
      title: 驗證錯誤
      description: 資料驗證失敗時的錯誤格式
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: 資料驗證失敗
        errors:
          type: object
          example:
            title:
              - 標題不能為空
            content:
              - '內容長度不能超過 10000 字元'
          additionalProperties:
            type: array
            items:
              type: string
      type: object
    Post:
      title: 貼文
      description: 貼文資料結構
      required:
        - id
        - title
        - content
        - status
        - created_at
      properties:
        id:
          description: 貼文ID
          type: integer
          example: 1
        title:
          description: 貼文標題
          type: string
          maxLength: 255
          example: 重要公告
        content:
          description: 貼文內容
          type: string
          example: 這是一則重要公告內容
        category:
          description: 貼文分類
          type: string
          enum:
            - general
            - announcement
            - urgent
            - notice
          example: announcement
        status:
          description: 貼文狀態
          type: string
          enum:
            - draft
            - published
            - archived
          example: published
        priority:
          description: 優先級
          type: string
          enum:
            - low
            - normal
            - high
            - urgent
          example: normal
        author_id:
          description: 作者ID
          type: integer
          example: 1
        created_at:
          description: 建立時間
          type: string
          format: date-time
          example: '2025-01-15T10:30:00Z'
        updated_at:
          description: 更新時間
          type: string
          format: date-time
          example: '2025-01-15T11:00:00Z'
        expires_at:
          description: 過期時間
          type: string
          format: date-time
          example: '2025-12-31T23:59:59Z'
          nullable: true
      type: object
  securitySchemes:
    bearerAuth:
      type: http
      description: '使用 JWT Token 進行 Bearer 認證'
      bearerFormat: JWT
      scheme: bearer
    sessionAuth:
      type: apiKey
      description: '使用 Session Cookie 進行認證'
      name: PHPSESSID
      in: cookie
    csrfToken:
      type: apiKey
      description: 'CSRF 保護令牌，用於防止跨站請求偽造攻擊'
      name: X-CSRF-TOKEN
      in: header
tags:
  -
    name: posts
    description: '文章管理相關 API - 建立、讀取、更新、刪除文章'
    externalDocs:
      description: 了解更多文章管理功能
      url: 'https://docs.alleynote.example.com/posts'
  -
    name: auth
    description: '身份驗證相關 API - 登入、登出、註冊、密碼重設'
    externalDocs:
      description: 'AlleyNote 完整文件'
      url: 'https://docs.alleynote.example.com'
  -
    name: attachments
    description: '附件管理相關 API - 檔案上傳、下載、刪除'
    externalDocs:
      description: 'AlleyNote 完整文件'
      url: 'https://docs.alleynote.example.com'
  -
    name: test
    description: test
