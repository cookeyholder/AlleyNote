# 前端服務 (Port 80)
server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;
    error_log /var/log/nginx/frontend_error.log;
    access_log /var/log/nginx/frontend_access.log;

    # ACME Challenge 路徑
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    # 前端靜態檔案 (SPA)
    location / {
        try_files $uri $uri/ /index.html;
        
        # 安全標頭設定
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Cross-Origin-Opener-Policy "same-origin-allow-popups" always;
        add_header Cross-Origin-Resource-Policy "same-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        
        # Content Security Policy - 開發環境（較寬鬆以支援 CDN 和即時開發）
        # 注意：生產環境應移除 'unsafe-inline' 和 'unsafe-eval'
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.ckeditor.com https://cdn.tailwindcss.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.ckeditor.com https://cdn.tailwindcss.com https://fonts.googleapis.com https://cdnjs.cloudflare.com; img-src 'self' data: blob: https: http:; font-src 'self' data: https://fonts.gstatic.com https://cdnjs.cloudflare.com https://cdn.ckeditor.com; connect-src 'self' http://localhost:8080; frame-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self';" always;
    }

    # 靜態資源快取（開發環境禁用 JS/CSS 快取）
    location ~* \.(js|css)$ {
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        try_files $uri =404;
    }
    
    # 其他靜態資源快取
    location ~* \.(png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    server_tokens off;
}

# API 服務 (Port 8080)
server {
    listen 8080;
    server_name localhost;
    error_log /var/log/nginx/api_error.log;
    access_log /var/log/nginx/api_access.log;

    # API 路由代理到 PHP 容器
    location / {
        # CORS 設定
        add_header Access-Control-Allow-Origin "http://localhost:3000" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials true always;
        
        # 包含安全標頭
        include /etc/nginx/api-security-headers.conf;

        # 處理 OPTIONS 預檢請求
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin "http://localhost:3000";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Allow-Credentials true;
            include /etc/nginx/api-security-headers.conf;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        # FastCGI 設定
        fastcgi_pass web:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /var/www/html/public/index.php;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_param QUERY_STRING $query_string;
        
        # FastCGI 安全設定
        fastcgi_hide_header X-Powered-By;
    }

    server_tokens off;
}
